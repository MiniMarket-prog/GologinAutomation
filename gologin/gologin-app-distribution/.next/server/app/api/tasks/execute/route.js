"use strict";(()=>{var e={};e.id=691,e.ids=[691],e.modules={5129:e=>{e.exports=require("gologin")},2934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},4580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},5869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},2615:e=>{e.exports=require("http")},8791:e=>{e.exports=require("https")},8621:e=>{e.exports=require("punycode")},6162:e=>{e.exports=require("stream")},7360:e=>{e.exports=require("url")},1568:e=>{e.exports=require("zlib")},7250:e=>{e.exports=import("puppeteer-core")},4780:(e,t,s)=>{s.a(e,async(e,r)=>{try{s.r(t),s.d(t,{originalPathname:()=>m,patchFetch:()=>u,requestAsyncStorage:()=>p,routeModule:()=>c,serverHooks:()=>g,staticGenerationAsyncStorage:()=>d});var a=s(9303),o=s(8716),i=s(670),n=s(930),l=e([n]);n=(l.then?(await l)():l)[0];let c=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/tasks/execute/route",pathname:"/api/tasks/execute",filename:"route",bundlePath:"app/api/tasks/execute/route"},resolvedPagePath:"C:\\Users\\HP\\Documents\\GitHub\\GologinAutomation\\gologin\\app\\api\\tasks\\execute\\route.ts",nextConfigOutput:"standalone",userland:n}),{requestAsyncStorage:p,staticGenerationAsyncStorage:d,serverHooks:g}=c,m="/api/tasks/execute/route";function u(){return(0,i.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:d})}r()}catch(e){r(e)}})},930:(e,t,s)=>{s.a(e,async(e,r)=>{try{s.r(t),s.d(t,{POST:()=>l});var a=s(9692),o=s(1978),i=s(7070),n=e([o]);async function l(e){try{let t=await (0,a.t)(),{task_id:s}=await e.json();if(!s)return i.NextResponse.json({error:"Task ID is required"},{status:400});let[r,n]=await Promise.all([t.from("settings").select("value").eq("key","gologin_api_key").single(),t.from("settings").select("value").eq("key","gologin_mode").single()]);if(r.error||!r.data?.value)return i.NextResponse.json({error:"GoLogin API key not found. Please save it in Settings first."},{status:400});let l=r.data.value,u=n.data?.value||"cloud",{data:c,error:p}=await t.from("automation_tasks").select("*").eq("id",s).single();if(p)throw p;let{data:d,error:g}=await t.from("gologin_profiles").select("*").eq("id",c.profile_id).single();if(g)throw g;let{data:m,error:f}=await t.from("behavior_patterns").select("*").eq("is_default",!0).single();if(f)throw f;await t.from("automation_tasks").update({status:"running",started_at:new Date().toISOString()}).eq("id",s),await t.from("gologin_profiles").update({status:"running"}).eq("id",d.id);let x=new o.Z(l,u,m.config),_=await x.executeTask(c,d);await t.from("automation_tasks").update({status:_.success?"completed":"failed",completed_at:new Date().toISOString(),error_message:_.error||null}).eq("id",s);let k={status:"idle",last_run:new Date().toISOString()};console.log("[v0] Task type:",c.task_type),console.log("[v0] Task result:",JSON.stringify(_,null,2)),"check_gmail_status"===c.task_type&&_.result?(console.log("[v0] âœ“ Gmail status check detected"),console.log("[v0] Result data:",JSON.stringify(_.result,null,2)),k.gmail_status=_.result.status,k.gmail_status_checked_at=new Date().toISOString(),k.gmail_status_message=_.result.message,console.log("[v0] Profile updates to apply:",JSON.stringify(k,null,2))):(console.log("[v0] Gmail status check NOT detected"),console.log("[v0] Condition check - task_type match:","check_gmail_status"===c.task_type),console.log("[v0] Condition check - result.result exists:",!!_.result)),console.log("[v0] Updating profile with:",JSON.stringify(k,null,2));let y=await t.from("gologin_profiles").update(k).eq("id",d.id);return console.log("[v0] Profile update result:",JSON.stringify(y,null,2)),await t.from("activity_logs").insert({profile_id:d.id,task_id:s,action:c.task_type,details:_.result||{},duration_ms:_.duration,success:_.success}),i.NextResponse.json({success:_.success,result:_})}catch(e){return console.error("[v0] Error executing task:",e),i.NextResponse.json({error:e.message},{status:500})}}o=(n.then?(await n)():n)[0],r()}catch(e){r(e)}})}};var t=require("../../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),r=t.X(0,[948,227,59,338],()=>s(4780));module.exports=r})();