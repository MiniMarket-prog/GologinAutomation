"use strict";exports.id=7403,exports.ids=[7403],exports.modules={36899:(e,o,t)=>{t.d(o,{GmailAutomator:()=>l});var a=t(51806);class l{constructor(e,o){this.page=e,this.behavior=new a.HumanBehavior(o)}async login(e,o,t){console.log("[v0] Starting Gmail login process..."),console.log(`[v0] Email: ${e}`),t&&console.log(`[v0] Recovery email provided: ${t}`);try{console.log("[v0] Navigating to Gmail login page..."),await this.page.goto("https://accounts.google.com/signin/v2/identifier?service=mail",{waitUntil:"networkidle2"}),console.log("[v0] ✓ Page loaded"),await this.behavior.waitRandom(2e3),console.log("[v0] Looking for email input...");let a=await this.page.waitForSelector('input[type="email"]',{timeout:1e4});if(!a)throw Error("Email input not found");console.log("[v0] ✓ Email input found"),await this.behavior.randomPause(),console.log("[v0] Typing email..."),await this.behavior.typeWithHumanSpeed(e,a),console.log("[v0] ✓ Email entered"),await this.behavior.waitRandom(1e3),console.log("[v0] Looking for Next button...");let l=null,i=["#identifierNext button",'button[type="button"]','[role="button"]',".VfPpkd-LgbsSe"];for(let e of i)try{let o=await this.page.$(e);if(o){l=o,console.log(`[v0] ✓ Found Next button with selector: ${e}`);break}}catch(e){continue}if(!l)for(let e of(console.log("[v0] Standard selectors failed, searching by text content..."),await this.page.$$("button"))){let o=await e.evaluate(e=>e.textContent?.toLowerCase()||"");if(o.includes("next")||o.includes("التالي")||o.includes("suivant")||o.includes("siguiente")||o.includes("weiter")){l=e,console.log(`[v0] ✓ Found Next button by text: ${o}`);break}}if(!l)throw Error("Next button not found");await this.behavior.randomPause(),await l.click(),console.log("[v0] ✓ Clicked Next button"),await this.behavior.waitRandom(3e3),console.log("[v0] Looking for password input...");let n=await this.page.waitForSelector('input[type="password"]',{timeout:1e4});if(!n)throw Error("Password input not found");console.log("[v0] ✓ Password input found"),await this.behavior.randomPause(),console.log("[v0] Typing password..."),await this.behavior.typeWithHumanSpeed(o,n),console.log("[v0] ✓ Password entered"),await this.behavior.waitRandom(1e3),console.log("[v0] Looking for Sign in button...");let r=null;for(let e of i)try{let o=await this.page.$(e);if(o){r=o,console.log(`[v0] ✓ Found Sign in button with selector: ${e}`);break}}catch(e){continue}if(!r)for(let e of(console.log("[v0] Standard selectors failed, searching by text content..."),await this.page.$$("button"))){let o=await e.evaluate(e=>e.textContent?.toLowerCase()||"");if(o.includes("next")||o.includes("sign in")||o.includes("التالي")||o.includes("تسجيل الدخول")||o.includes("connexion")||o.includes("iniciar sesi\xf3n")||o.includes("anmelden")){r=e,console.log(`[v0] ✓ Found Sign in button by text: ${o}`);break}}if(!r)throw Error("Sign in button not found");await this.behavior.randomPause(),await r.click(),console.log("[v0] ✓ Clicked Sign in button"),await this.behavior.waitRandom(5e3);let s=this.page.url();if(s.includes("/challenge/selection")){console.log("[v0] ⚠ Verification challenge detected, attempting recovery email verification..."),console.log("[v0] [DEBUG] Analyzing verification page options...");let e=await this.page.evaluate(()=>{let e=[];return['div[role="link"]',"div[data-challengetype]",'[role="button"]',"button","div[jsname]",'li[role="presentation"]',"div[data-challengeindex]"].forEach(o=>{document.querySelectorAll(o).forEach(o=>{let t=o.textContent?.trim()||"";t&&e.push({tag:o.tagName,text:t.substring(0,150),ariaLabel:o.getAttribute("aria-label"),dataType:o.getAttribute("data-challengetype"),role:o.getAttribute("role"),classes:o.className})})}),e});if(console.log("[v0] [DEBUG] Found",e.length,"clickable options on verification page:"),e.forEach((e,o)=>{console.log(`[v0] [DEBUG] Option ${o+1}:`,JSON.stringify(e,null,2))}),!await this.page.evaluate(()=>{let e=["recovery email","alternate email","backup email","confirm your recovery email","تأكيد البريد الإلكتروني لاسترداد الحساب","البريد الإلكتروني لاسترداد الحساب","البريد الإلكتروني للطوارئ","بريد الاسترداد","البريد البديل","e-mail de r\xe9cup\xe9ration","adresse e-mail de secours","correo de recuperaci\xf3n","wiederherstellungs-e-mail"],o=Array.from(document.querySelectorAll("button"));for(let t of(console.log("[v0] [DEBUG] Checking",o.length,"button elements for recovery email option..."),o)){let o=t.textContent?.toLowerCase()||"",a=t.getAttribute("aria-label")?.toLowerCase()||"";if(e.some(e=>o.includes(e.toLowerCase())||a.includes(e.toLowerCase())))return console.log("[v0] [DEBUG] ✓ Found recovery email BUTTON with text:",o.substring(0,100)),t.click(),!0}let t=Array.from(document.querySelectorAll('div[role="link"], div[data-challengetype], [role="button"], li[role="presentation"]'));for(let o of(console.log("[v0] [DEBUG] No button found, checking",t.length,"other elements..."),t)){let t=o.textContent?.toLowerCase()||"",a=o.getAttribute("aria-label")?.toLowerCase()||"",l=o.getAttribute("data-challengetype")?.toLowerCase()||"";if(e.some(e=>t.includes(e.toLowerCase())||a.includes(e.toLowerCase())||l.includes("recovery")||l.includes("email")))return console.log("[v0] [DEBUG] ✓ Found recovery email option (non-button) with text:",t.substring(0,100)),o.click(),!0}return console.log("[v0] [DEBUG] ✗ No recovery email option found"),!1}))return console.log("[v0] ⚠ Could not find recovery email verification option"),{success:!1,error:"Recovery email option not found on verification page"};{console.log("[v0] ✓ Clicked recovery email verification option"),await this.behavior.waitRandom(5e3),await this.page.waitForNavigation({waitUntil:"networkidle2",timeout:1e4}).catch(()=>{console.log("[v0] [DEBUG] No navigation detected after clicking recovery option")}),console.log("[v0] [DEBUG] Analyzing page after clicking recovery option..."),console.log("[v0] [DEBUG] Current URL:",this.page.url());let e=await this.page.evaluate(()=>({title:document.title,bodyText:document.body.innerText.substring(0,500),hasInputs:document.querySelectorAll('input[type="email"], input[type="text"]').length,hasButtons:document.querySelectorAll('button, [role="button"]').length,allInputs:Array.from(document.querySelectorAll("input")).map(e=>({type:e.type,name:e.name,id:e.id,placeholder:e.placeholder,ariaLabel:e.getAttribute("aria-label"),visible:null!==e.offsetParent})),allButtons:Array.from(document.querySelectorAll('button, [role="button"]')).map(e=>({text:e.textContent?.trim().substring(0,50),ariaLabel:e.getAttribute("aria-label"),type:e.getAttribute("type")}))}));console.log("[v0] [DEBUG] After click analysis:",JSON.stringify(e,null,2)),console.log("[v0] Looking for recovery email input..."),console.log("[v0] [DEBUG] Current URL:",this.page.url());let o=null;for(let e of['input[type="email"]','input[name="knowledgePreregisteredEmailResponse"]','input[aria-label*="email"]','input[aria-label*="البريد"]',"input#knowledge-preregistered-email-response",'input[type="text"]'])if(console.log(`[v0] [DEBUG] Trying selector: ${e}`),o=await this.page.$(e)){console.log(`[v0] [DEBUG] ✓ Found input with selector: ${e}`);break}if(!o){console.log("[v0] [DEBUG] No input found with standard selectors, checking all inputs on page...");let e=await this.page.$$("input");console.log(`[v0] [DEBUG] Found ${e.length} input elements on page`);for(let t=0;t<e.length;t++){let a=e[t],l=await a.evaluate(e=>e.getAttribute("type")),i=await a.evaluate(e=>e.getAttribute("name")),n=await a.evaluate(e=>e.getAttribute("id")),r=await a.evaluate(e=>e.getAttribute("aria-label"));if(console.log(`[v0] [DEBUG] Input ${t}: type="${l}", name="${i}", id="${n}", aria-label="${r}"`),!o&&("email"===l||"text"===l||!l)&&await a.evaluate(e=>{let o=window.getComputedStyle(e);return"none"!==o.display&&"hidden"!==o.visibility&&"0"!==o.opacity})){o=a,console.log(`[v0] [DEBUG] Using input ${t} as recovery email input`);break}}}if(!o)return console.log("[v0] ⚠ Recovery email input not found"),{success:!1,error:"Recovery email input not found on verification page"};{if(console.log("[v0] ✓ Recovery email input found"),!t)return console.log("[v0] ⚠ Recovery email not provided, cannot complete verification"),{success:!1,error:"Recovery email verification required but no recovery email provided"};await this.behavior.randomPause(),console.log("[v0] Typing recovery email..."),await this.behavior.typeWithHumanSpeed(t,o),console.log("[v0] ✓ Recovery email entered"),await this.behavior.waitRandom(1e3),console.log("[v0] Looking for Next button...");let e=await this.findButtonByText(["next","التالي","suivant","siguiente"]);if(!e)return console.log("[v0] ⚠ Next button not found after entering recovery email"),{success:!1,error:"Could not proceed after entering recovery email"};if(await this.behavior.randomPause(),await e.click(),console.log("[v0] ✓ Clicked Next button"),await this.behavior.waitRandom(5e3),this.page.url().includes("mail.google.com"))return console.log("[v0] ✓ Login successful after recovery email verification!"),console.log("[v0] Checking for browser password save dialog..."),await this.behavior.waitRandom(3e3),await this.page.evaluate(()=>{console.log("[v0] [DEBUG] Starting password save dialog search...");let e=["save","حفظ","enregistrer","guardar","speichern","salvar","tallenna"],o=Array.from(document.querySelectorAll("button"));console.log("[v0] [DEBUG] Found",o.length,"buttons on page"),o.forEach((e,o)=>{let t=e.textContent?.trim()||"",a=null!==e.offsetParent;console.log(`[v0] [DEBUG] Button ${o+1}: text="${t}", visible=${a}, classes="${e.className}"`)});let t=Array.from(document.querySelectorAll('div[role="button"]'));for(let a of(console.log("[v0] [DEBUG] Found",t.length,'divs with role="button"'),t.forEach((e,o)=>{let t=e.textContent?.trim()||"",a=null!==e.offsetParent;console.log(`[v0] [DEBUG] Div button ${o+1}: text="${t}", visible=${a}`)}),o)){let o=a.textContent?.toLowerCase().trim()||"";if(null!==a.offsetParent&&e.some(e=>o===e.toLowerCase()||o.includes(e.toLowerCase())))return console.log("[v0] [DEBUG] Found save password button (method 1) with text:",o),a.click(),!0}for(let o of t){let t=o.textContent?.toLowerCase().trim()||"";if(null!==o.offsetParent&&e.some(e=>t===e.toLowerCase()||t.includes(e.toLowerCase())))return console.log("[v0] [DEBUG] Found save password button (method 2) with text:",t),o.click(),!0}let a=Array.from(document.querySelectorAll("*"));for(let o of(console.log("[v0] [DEBUG] Searching through all elements for save button..."),a)){let t=o.textContent?.toLowerCase().trim()||"",a=o.tagName.toLowerCase();if(!(t.length>50)&&e.some(e=>t===e.toLowerCase())&&("button"===a||"button"===o.getAttribute("role"))){let e=null!==o.offsetParent;if(console.log(`[v0] [DEBUG] Found potential save button (method 3): tag=${a}, text="${t}", visible=${e}`),e)return o.click(),!0}}return console.log("[v0] [DEBUG] No save password button found after exhaustive search"),!1})?(console.log("[v0] ✓ Clicked 'Save password' button in browser dialog"),await this.behavior.waitRandom(1e3)):console.log("[v0] No password save dialog detected (this is normal if already saved)"),{success:!0};return console.log("[v0] ⚠ Still on verification page after recovery email"),{success:!1,error:"Recovery email verification incomplete - may need additional steps"}}}}if(s.includes("challenge")||s.includes("verify"))return console.log("[v0] ⚠ 2FA or verification required (no recovery email provided)"),{success:!1,error:"2FA or verification required"};if(s.includes("mail.google.com"))return console.log("[v0] ✓ Login successful!"),console.log("[v0] Checking for browser password save dialog..."),await this.behavior.waitRandom(3e3),await this.page.evaluate(()=>{console.log("[v0] [DEBUG] Starting password save dialog search...");let e=["save","حفظ","enregistrer","guardar","speichern","salvar","tallenna"],o=Array.from(document.querySelectorAll("button"));console.log("[v0] [DEBUG] Found",o.length,"buttons on page"),o.forEach((e,o)=>{let t=e.textContent?.trim()||"",a=null!==e.offsetParent;console.log(`[v0] [DEBUG] Button ${o+1}: text="${t}", visible=${a}, classes="${e.className}"`)});let t=Array.from(document.querySelectorAll('div[role="button"]'));for(let a of(console.log("[v0] [DEBUG] Found",t.length,'divs with role="button"'),t.forEach((e,o)=>{let t=e.textContent?.trim()||"",a=null!==e.offsetParent;console.log(`[v0] [DEBUG] Div button ${o+1}: text="${t}", visible=${a}`)}),o)){let o=a.textContent?.toLowerCase().trim()||"";if(null!==a.offsetParent&&e.some(e=>o===e.toLowerCase()||o.includes(e.toLowerCase())))return console.log("[v0] [DEBUG] Found save password button (method 1) with text:",o),a.click(),!0}for(let o of t){let t=o.textContent?.toLowerCase().trim()||"";if(null!==o.offsetParent&&e.some(e=>t===e.toLowerCase()||t.includes(e.toLowerCase())))return console.log("[v0] [DEBUG] Found save password button (method 2) with text:",t),o.click(),!0}let a=Array.from(document.querySelectorAll("*"));for(let o of(console.log("[v0] [DEBUG] Searching through all elements for save button..."),a)){let t=o.textContent?.toLowerCase().trim()||"",a=o.tagName.toLowerCase();if(!(t.length>50)&&e.some(e=>t===e.toLowerCase())&&("button"===a||"button"===o.getAttribute("role"))){let e=null!==o.offsetParent;if(console.log(`[v0] [DEBUG] Found potential save button (method 3): tag=${a}, text="${t}", visible=${e}`),e)return o.click(),!0}}return console.log("[v0] [DEBUG] No save password button found after exhaustive search"),!1})?(console.log("[v0] ✓ Clicked 'Save password' button in browser dialog"),await this.behavior.waitRandom(1e3)):console.log("[v0] No password save dialog detected (this is normal if already saved)"),{success:!0};return console.log("[v0] ✗ Login may have failed, unexpected URL:",s),{success:!1}}catch(e){return console.error("[v0] Login error:",e.message),{success:!1,error:e.message}}}async findButtonByText(e){for(let o of(await this.page.$$("button"))){let t=await o.evaluate(e=>e.textContent?.toLowerCase()||"");if(e.some(e=>t.includes(e.toLowerCase())))return o}return null}async checkInbox(){console.log("[v0] Checking inbox with human behavior");try{console.log("[v0] Navigating to inbox..."),await this.page.goto("https://mail.google.com/mail/u/0/#inbox",{waitUntil:"networkidle2"}),console.log("[v0] ✓ Inbox loaded"),await this.behavior.waitRandom(2e3),console.log("[v0] Scrolling to view emails..."),await this.behavior.scrollNaturally(this.page,300),await this.behavior.randomPause();let e=await this.page.evaluate(()=>{let e=document.querySelector('[aria-label*="Unread"]');if(e){let o=e.textContent?.match(/\d+/);return o?Number.parseInt(o[0]):0}return 0}),o=await this.page.evaluate(()=>Array.from(document.querySelectorAll("tr.zA")).slice(0,10).map(e=>{let o=e.querySelector(".yW span")?.textContent||"",t=e.querySelector(".y6 span")?.textContent||"",a=e.querySelector(".xW span")?.textContent||"",l=e.classList.contains("zE");return{sender:o,subject:t,time:a,isUnread:l}}));return console.log(`[v0] ✓ Found ${o.length} emails, ${e} unread`),{success:!0,unreadCount:e,emails:o}}catch(e){return console.error("[v0] ❌ Check inbox failed"),console.error("[v0] Error:",e.message),{success:!1,error:e.message}}}async readEmail(e){console.log(`[v0] Reading email at index ${e}`);try{console.log("[v0] Finding email rows...");let o=await this.page.$$("tr.zA");if(console.log(`[v0] Found ${o.length} email rows`),e>=o.length)throw Error(`Email index ${e} out of range (only ${o.length} emails found)`);console.log(`[v0] Clicking on email ${e}...`),await this.behavior.randomPause(),await o[e].click(),await this.behavior.waitRandom(2e3),console.log("[v0] Scrolling to read content..."),await this.behavior.scrollNaturally(this.page,200),await this.behavior.randomPause(),await this.behavior.scrollNaturally(this.page,200);let t=await this.page.evaluate(()=>{let e=document.querySelector("h2.hP")?.textContent||"",o=document.querySelector(".gD")?.textContent||"",t=document.querySelector(".a3s.aiL")?.textContent||"";return{subject:e,sender:o,body:t.substring(0,500)}});return console.log("[v0] ✓ Email read successfully:",t.subject),await this.behavior.waitRandom(1e3),await this.page.goBack(),await this.behavior.waitRandom(1500),{success:!0,content:t}}catch(e){return console.error("[v0] ❌ Read email failed"),console.error("[v0] Error:",e.message),{success:!1,error:e.message}}}async starEmail(e){console.log(`[v0] Starring email at index ${e}`);try{console.log("[v0] Navigating to Gmail inbox..."),await this.page.goto("https://mail.google.com/mail/u/0/#inbox",{waitUntil:"networkidle2",timeout:3e4}),await this.behavior.waitRandom(3e3),console.log("[v0] Checking if logged into Gmail...");let o=await this.page.evaluate(()=>{let e=!!document.querySelector('[gh="cm"]'),o=!!document.querySelector('[aria-label*="Inbox"]')||!!document.querySelector('[title*="Inbox"]'),t=!!document.querySelector('img[alt*="Gmail"]'),a=!!document.querySelector('input[type="email"]')||!!document.querySelector('input[type="password"]');return{hasComposeButton:e,hasInboxLabel:o,hasGmailLogo:t,hasLoginForm:a,isLoggedIn:(e||o)&&!a,url:window.location.href,title:document.title}});if(console.log("[v0] Login status:",JSON.stringify(o,null,2)),!o.isLoggedIn){console.log("[v0] ❌ Not logged into Gmail!");let e=await this.page.screenshot({encoding:"base64"});throw console.log("[v0] Screenshot captured for debugging (base64 length):",e.length),Error("Not logged into Gmail. Please ensure the GoLogin profile has Gmail credentials saved or login manually first.")}console.log("[v0] ✓ Logged into Gmail"),console.log("[v0] Waiting for Gmail interface to fully load..."),await this.page.waitForSelector('[role="main"]',{timeout:15e3}).catch(()=>{console.log("[v0] Main Gmail container not found")}),await this.behavior.waitRandom(2e3),console.log("[v0] Waiting for email rows to load...");let t=[],a=0;for(;0===t.length&&a<8;){for(let e of["tr.zA","tr[role='row']","div[role='row']"])if((t=await this.page.$$(e)).length>0){console.log(`[v0] Found ${t.length} email rows using selector: ${e}`);break}if(console.log(`[v0] Attempt ${a+1}: Found ${t.length} email rows`),0===t.length&&++a<8&&(console.log("[v0] No emails found, scrolling and waiting..."),await this.behavior.scrollNaturally(this.page,300),await this.behavior.waitRandom(2e3),3===a)){console.log("[v0] Trying to click inbox link to refresh...");let e=await this.page.$('a[href*="#inbox"]');e&&(await e.click(),await this.behavior.waitRandom(3e3))}}if(0===t.length){console.log("[v0] Capturing page state for debugging...");let e=await this.page.evaluate(()=>({url:window.location.href,title:document.title,hasMainRole:!!document.querySelector('[role="main"]'),hasTable:!!document.querySelector("table"),hasTr:document.querySelectorAll("tr").length,hasZaClass:document.querySelectorAll(".zA").length,bodyText:document.body.innerText.substring(0,500)}));console.log("[v0] Page state:",JSON.stringify(e,null,2));let o=await this.page.screenshot({encoding:"base64"});throw console.log("[v0] Screenshot captured for debugging (base64 length):",o.length),Error("Could not find email rows on page - Gmail may not have loaded properly or inbox is empty")}if(console.log(`[v0] Found ${t.length} email rows`),e>=t.length)throw Error(`Email index ${e} out of range (only ${t.length} emails found)`);console.log(`[v0] Checking if email ${e} is already starred...`);let l=await this.page.evaluate(e=>{let o=Array.from(document.querySelectorAll("tr.zA"))[e];if(!o)return{found:!1,isStarred:!1};for(let e of['span[role="checkbox"][aria-label*="Starred"]','span[role="checkbox"][aria-label*="Not starred"]','span[role="checkbox"][aria-label*="Star"]',"span.T-KT"]){let t=o.querySelector(e);if(t){let e=t.getAttribute("aria-label")||"",o=e.includes("Starred")&&!e.includes("Not starred");return{found:!0,isStarred:o,ariaLabel:e}}}return{found:!1,isStarred:!1}},e);if(console.log("[v0] Star status:",JSON.stringify(l,null,2)),l.isStarred)return console.log(`[v0] ⚠️ Email ${e} is already starred, skipping...`),{success:!0,alreadyStarred:!0};console.log(`[v0] Finding and clicking star button for email ${e}...`),await this.behavior.waitRandom(1e3);let i=t[e],n=null,r="";for(let e of['span[role="checkbox"][aria-label*="Not starred"]','span[role="checkbox"][aria-label*="Star"]','span[data-tooltip*="Star"]',"span.T-KT",'div[data-tooltip*="Star"]'])if(n=await i.$(e)){r=e,console.log(`[v0] ✓ Star button found using selector: ${e}`);break}if(!n){let e=await i.evaluate(e=>{let o=e.querySelectorAll("span[role='checkbox']");return Array.from(o).map(e=>({role:e.getAttribute("role"),ariaLabel:e.getAttribute("aria-label"),className:e.className}))});console.log("[v0] Could not find star button. Found elements:",JSON.stringify(e,null,2));let o=await this.page.screenshot({encoding:"base64"});throw console.log("[v0] Screenshot captured for debugging (base64 length):",o.length),Error("Star button not found with any selector")}console.log("[v0] Clicking star button..."),await n.click(),console.log(`[v0] ✓ Star button clicked using selector: ${r}`),await this.behavior.waitRandom(1e3);let s=await this.page.browser()?.pages();if(s&&s.length>1){console.log(`[v0] Detected ${s.length} open tabs, closing extra tabs...`);for(let e=1;e<s.length;e++)try{await s[e].close(),console.log(`[v0] ✓ Closed extra tab ${e}`)}catch(o){console.log(`[v0] Could not close tab ${e}`)}}return console.log("[v0] ✓✓✓ Email starred successfully ✓✓✓"),{success:!0,alreadyStarred:!1}}catch(e){console.error("[v0] ❌ Star email failed"),console.error("[v0] Error type:",e.name),console.error("[v0] Error message:",e.message),console.error("[v0] Error stack:",e.stack);try{let e=await this.page.screenshot({encoding:"base64"});console.log("[v0] Screenshot captured for debugging (base64 length):",e.length)}catch(e){console.error("[v0] Could not capture screenshot:",e)}return{success:!1,error:e.message}}}async sendEmail(e,o,t){console.log(`[v0] Sending email to ${e}`);try{console.log("[v0] Looking for compose button...");let a=await this.page.waitForSelector('[role="button"][gh="cm"]',{timeout:1e4});if(!a)throw Error("Compose button not found");console.log("[v0] ✓ Compose button found"),await this.behavior.randomPause(),await a.click(),await this.behavior.waitRandom(2e3),console.log("[v0] Filling in recipient...");let l=await this.page.waitForSelector('input[aria-label*="To"]',{timeout:1e4});if(!l)throw Error("To input not found");await this.behavior.typeWithHumanSpeed(e,l),await this.behavior.waitRandom(1e3),console.log("[v0] ✓ Recipient filled"),console.log("[v0] Filling in subject...");let i=await this.page.waitForSelector('input[name="subjectbox"]',{timeout:1e4});if(!i)throw Error("Subject input not found");await i.click(),await this.behavior.waitRandom(500),await this.behavior.typeWithHumanSpeed(o,i),await this.behavior.waitRandom(1e3),console.log("[v0] ✓ Subject filled"),console.log("[v0] Filling in body...");let n=await this.page.waitForSelector('[role="textbox"][aria-label*="Message"]',{timeout:1e4});if(!n)throw Error("Body input not found");await n.click(),await this.behavior.waitRandom(500),await this.behavior.typeWithHumanSpeed(t,n),await this.behavior.waitRandom(2e3),console.log("[v0] ✓ Body filled"),await this.behavior.randomPause(),console.log("[v0] Clicking send button...");let r=await this.page.waitForSelector('[role="button"][aria-label*="Send"]',{timeout:1e4});if(!r)throw Error("Send button not found");return await r.click(),await this.behavior.waitRandom(2e3),console.log("[v0] ✓✓✓ Email sent successfully ✓✓✓"),{success:!0}}catch(e){return console.error("[v0] ❌ Send email failed"),console.error("[v0] Error:",e.message),{success:!1,error:e.message}}}async searchEmails(e){console.log(`[v0] Searching for emails with query: ${e}`);try{console.log("[v0] Navigating to inbox first..."),await this.page.goto("https://mail.google.com/mail/u/0/#inbox",{waitUntil:"networkidle2",timeout:3e4}),await this.behavior.waitRandom(2e3),console.log("[v0] Looking for search box...");let o=await this.page.waitForSelector('input[aria-label="Search mail"]',{timeout:1e4});if(!o)throw Error("Search box not found");console.log("[v0] ✓ Search box found"),await this.behavior.randomPause(),await o.click(),await this.behavior.waitRandom(500),await this.page.keyboard.down("Control"),await this.page.keyboard.press("A"),await this.page.keyboard.up("Control"),await this.page.keyboard.press("Backspace"),await this.behavior.waitRandom(300),console.log(`[v0] Typing search query: ${e}`),await this.behavior.typeWithHumanSpeed(e,o),await this.behavior.waitRandom(1e3),console.log("[v0] Looking for search button...");let t=await this.page.waitForSelector('button[aria-label="Search Mail"]',{timeout:5e3}).catch(()=>null);t?(console.log("[v0] Clicking search button..."),await t.click()):(console.log("[v0] Search button not found, pressing Enter..."),await this.page.keyboard.press("Enter")),console.log("[v0] Waiting for search results to load..."),await this.page.waitForFunction(()=>window.location.href.includes("#search/"),{timeout:1e4});let a=this.page.url();console.log(`[v0] Current URL after search: ${a}`),console.log("[v0] Waiting for Gmail to filter search results..."),await this.behavior.waitRandom(3e3);let l=0,i=0;for(let e=0;e<5;e++){let o=await this.page.evaluate(()=>document.querySelectorAll("tr.zA").length);if(console.log(`[v0] Check ${e+1}: Found ${o} email rows`),o===l&&o>0){if(++i>=2){console.log("[v0] ✓ Search results have stabilized");break}}else i=0;l=o,await this.behavior.waitRandom(1500)}let n=await this.page.$$("tr.zA");if(console.log(`[v0] Found ${n.length} emails matching search query`),n.length>0){let e=await this.page.evaluate(()=>Array.from(document.querySelectorAll("tr.zA")).slice(0,5).map((e,o)=>{let t=e.querySelector(".yW span")?.textContent||"",a=e.querySelector(".y6 span")?.textContent||"";return{index:o,sender:t,subject:a}}));console.log("[v0] First few emails in search results:",JSON.stringify(e,null,2))}if(0===n.length)return{success:!1,error:"No emails found matching search query",count:0};return{success:!0,count:n.length}}catch(e){console.error("[v0] ❌ Search emails failed"),console.error("[v0] Error:",e.message);try{let e=await this.page.screenshot({encoding:"base64"});console.log("[v0] Screenshot captured for debugging (base64 length):",e.length)}catch(e){console.error("[v0] Could not capture screenshot:",e)}return{success:!1,error:e.message}}}async replyToEmail(e,o,t){console.log(`[v0] Replying to email at index ${e}`),t&&console.log(`[v0] Expected sender: ${t}`);try{let a=this.page.url();console.log(`[v0] Current URL: ${a}`),console.log("[v0] Finding email rows...");let l=await this.page.$$("tr.zA");if(console.log(`[v0] Found ${l.length} email rows`),e>=l.length)throw Error(`Email index ${e} out of range (only ${l.length} emails found)`);let i=await this.page.evaluate(e=>{let o=Array.from(document.querySelectorAll("tr.zA"))[e];if(!o)return{found:!1};let t=o.querySelector(".yW span"),a=t?.textContent||"",l=t?.getAttribute("email")||t?.getAttribute("title")||t?.parentElement?.getAttribute("email")||t?.parentElement?.getAttribute("title")||"",i=o.querySelector(".y6 span")?.textContent||"";return{found:!0,senderName:a,senderEmail:l,subject:i,index:e}},e);if(console.log(`[v0] Email details at index ${e}:`,JSON.stringify(i,null,2)),t&&i.found){if(!i.senderName&&!i.senderEmail)return console.log(`[v0] ⚠️ Could not extract sender information from email`),{success:!1,error:"Could not extract sender information",senderMismatch:!0};let e=t.toLowerCase(),o=i.senderName?.toLowerCase().includes(e),a=i.senderEmail?.toLowerCase().includes(e);if(!(o||a))return console.log(`[v0] ⚠️ Sender mismatch! Expected: ${t}, Found name: ${i.senderName}, Found email: ${i.senderEmail}`),{success:!1,error:`Sender mismatch: expected ${t}, found ${i.senderName} (${i.senderEmail})`,senderMismatch:!0};console.log(`[v0] ✓ Sender matches: ${i.senderName} (${i.senderEmail})`)}console.log(`[v0] Opening email ${e}...`),await this.behavior.randomPause();let n=await this.page.evaluate(e=>{let o=Array.from(document.querySelectorAll("tr.zA"))[e];return o?(o.click(),{success:!0}):{success:!1,error:"Row not found in DOM"}},e);if(!n.success)throw Error(n.error||"Failed to click email row");await this.behavior.waitRandom(3e3),console.log("[v0] Waiting for email to load..."),await this.page.waitForSelector("h2.hP",{timeout:1e4}).catch(()=>{console.log("[v0] Email subject not found")}),await this.behavior.waitRandom(1e3);let r=await this.page.evaluate(()=>{let e=document.querySelector("h2.hP")?.textContent||"",o=document.querySelector(".gD"),t=o?.textContent||"",a=o?.getAttribute("email")||o?.getAttribute("data-hovercard-id")||document.querySelector("[email]")?.getAttribute("email")||"";return{subject:e,senderName:t,senderEmail:a}});console.log("[v0] Opened email details:",JSON.stringify(r,null,2)),console.log("[v0] Looking for reply button...");let s=await this.page.waitForSelector('[role="button"][aria-label*="Reply"]',{timeout:1e4});if(!s)throw Error("Reply button not found");console.log("[v0] ✓ Reply button found"),await this.behavior.randomPause(),await s.click(),await this.behavior.waitRandom(2e3),console.log("[v0] Waiting for reply compose box...");let c=await this.page.waitForSelector('[role="textbox"][aria-label*="Message"]',{timeout:1e4});if(!c)throw Error("Reply compose box not found");console.log("[v0] ✓ Reply compose box found"),console.log("[v0] Typing reply message..."),await c.click(),await this.behavior.waitRandom(500),await this.behavior.typeWithHumanSpeed(o,c),await this.behavior.waitRandom(2e3),console.log("[v0] ✓ Reply message typed"),await this.behavior.randomPause(),console.log("[v0] Clicking send button...");let u=await this.page.waitForSelector('[role="button"][aria-label*="Send"]',{timeout:1e4});if(!u)throw Error("Send button not found");return await u.click(),await this.behavior.waitRandom(2e3),console.log("[v0] ✓✓✓ Reply sent successfully ✓✓✓"),await this.behavior.waitRandom(1e3),console.log("[v0] Returning to search results..."),await this.page.goBack(),await this.behavior.waitRandom(2e3),await this.page.waitForSelector("table.F",{timeout:1e4}).catch(()=>{console.log("[v0] Search results table not found after going back")}),await this.behavior.waitRandom(1e3),{success:!0}}catch(e){return console.error("[v0] ❌ Reply to email failed"),console.error("[v0] Error:",e.message),{success:!1,error:e.message}}}async reportToInbox(e){let o=`in:spam ${e}`;console.log(`[v0] Reporting email to inbox with search query: ${o}`);try{console.log("[v0] Navigating to spam folder..."),await this.page.goto("https://mail.google.com/mail/u/0/#spam",{waitUntil:"networkidle2",timeout:3e4}),await this.behavior.waitRandom(2e3),console.log("[v0] Waiting for Gmail interface to fully load..."),await this.page.waitForSelector('[role="main"]',{timeout:15e3}).catch(()=>{console.log("[v0] Main Gmail container not found")}),await this.behavior.waitRandom(3e3),console.log("[v0] Looking for search box...");let e=null,t=0;for(;!e&&t<5;){for(let o of['input[aria-label*="Search"]','input[aria-label*="earch"]','input[placeholder*="earch"]','input[type="text"][aria-label*="mail"]','input[type="text"][aria-label*="message"]','input[type="text"][name="q"]','form[role="search"] input[type="text"]'])if(e=await this.page.$(o).catch(()=>null)){console.log(`[v0] ✓ Search box found using selector: ${o}`);break}!e&&(console.log(`[v0] Search box not found, attempt ${t+1}/5`),++t<5&&await this.behavior.waitRandom(2e3))}if(!e){let e=await this.page.evaluate(()=>({url:window.location.href,title:document.title,hasMainRole:!!document.querySelector('[role="main"]'),searchInputs:Array.from(document.querySelectorAll("input")).map(e=>({type:e.type,ariaLabel:e.getAttribute("aria-label"),placeholder:e.placeholder}))}));throw console.log("[v0] Page state:",JSON.stringify(e,null,2)),Error("Search box not found after multiple attempts")}console.log("[v0] ✓ Search box found"),await this.behavior.randomPause(),await e.click(),await this.behavior.waitRandom(500),await this.page.keyboard.down("Control"),await this.page.keyboard.press("A"),await this.page.keyboard.up("Control"),await this.page.keyboard.press("Backspace"),await this.behavior.waitRandom(300),console.log(`[v0] Typing search query: ${o}`),await this.behavior.typeWithHumanSpeed(o,e),await this.behavior.waitRandom(1e3),console.log("[v0] Looking for search button...");let a=null;for(let e of['button[aria-label*="Search"]','button[aria-label*="earch"]','button[type="submit"]'])if(a=await this.page.$(e).catch(()=>null)){console.log(`[v0] Search button found using selector: ${e}`);break}a?(console.log("[v0] Clicking search button..."),await a.click()):(console.log("[v0] Search button not found, pressing Enter..."),await this.page.keyboard.press("Enter")),console.log("[v0] Waiting for search results to load..."),await this.page.waitForFunction(()=>window.location.href.includes("#search/"),{timeout:1e4});let l=this.page.url();console.log(`[v0] Current URL after search: ${l}`),console.log("[v0] Waiting for Gmail to filter search results..."),await this.behavior.waitRandom(3e3);let i=0,n=0;for(let e=0;e<5;e++){let o=await this.page.evaluate(()=>document.querySelectorAll("tr.zA").length);if(console.log(`[v0] Check ${e+1}: Found ${o} email rows`),o===i&&o>0){if(++n>=2){console.log("[v0] ✓ Search results have stabilized");break}}else n=0;i=o,await this.behavior.waitRandom(1500)}let r=await this.page.$$("tr.zA");if(console.log(`[v0] Found ${r.length} emails in spam matching search query`),0===r.length)return{success:!1,error:"No emails found in spam matching search query",count:0};let s=await this.page.evaluate(()=>{let e=Array.from(document.querySelectorAll("tr.zA"))[0];if(!e)return null;let o=e.querySelector(".yW span")?.textContent||"",t=e.querySelector(".y6 span")?.textContent||"";return{sender:o,subject:t}});console.log("[v0] First email in spam:",JSON.stringify(s,null,2)),console.log("[v0] Opening the first email..."),await this.behavior.randomPause();let c=await this.page.evaluate(()=>{let e=Array.from(document.querySelectorAll("tr.zA"))[0];return e?(e.click(),{success:!0}):{success:!1,error:"Row not found in DOM"}});if(!c.success)throw Error(c.error||"Failed to open email");console.log("[v0] ✓ Email opened"),await this.behavior.waitRandom(3e3),console.log("[v0] Waiting for email to fully load..."),await this.page.waitForSelector("h2.hP",{timeout:1e4}).catch(()=>{console.log("[v0] Email subject not found")}),await this.behavior.waitRandom(2e3),console.log("[v0] Looking for 'Not spam' button in opened email...");let u=await this.page.evaluate(()=>{for(let e of['[aria-label*="Not spam"]','[aria-label*="not spam"]','[aria-label*="Non spam"]','[aria-label*="non spam"]','[aria-label*="l\xe9gitime"]','[aria-label*="Legitime"]','[aria-label*="No es spam"]','[aria-label*="Kein Spam"]','[data-tooltip*="Not spam"]','[data-tooltip*="spam"]','div[role="button"][aria-label*="spam"]','.nH.if div[role="button"][aria-label*="spam"]']){let o=document.querySelector(e);if(o)return o.scrollIntoView({behavior:"smooth",block:"center"}),setTimeout(()=>{},500),o.click(),{success:!0,selector:e,ariaLabel:o.getAttribute("aria-label")||"N/A",dataTooltip:o.getAttribute("data-tooltip")||"N/A"}}let e=Array.from(document.querySelectorAll('div[role="button"]')).slice(0,20).map(e=>({ariaLabel:e.getAttribute("aria-label"),dataTooltip:e.getAttribute("data-tooltip"),textContent:e.textContent?.substring(0,50)}));return{success:!1,error:"'Not spam' button not found with any selector",foundButtons:e}});if(console.log("[v0] 'Not spam' button click result:",JSON.stringify(u,null,2)),!u.success){let e=await this.page.screenshot({encoding:"base64"});throw console.log("[v0] Screenshot captured for debugging (base64 length):",e.length),Error(u.error||"Failed to click 'Not spam' button")}console.log(`[v0] ✓ 'Not spam' button clicked using selector: ${u.selector}`),console.log("[v0] Waiting for Gmail to process the action and move email to inbox..."),await this.behavior.waitRandom(4e3);let g=await Promise.race([this.page.waitForFunction(e=>{let o=window.location.href;return o!==e&&!o.includes("/mail/u/0/#")},{timeout:1e4},this.page.url()).then(()=>({method:"url_change",success:!0})).catch(()=>null),this.page.waitForFunction(()=>{let e=window.location.href;return e.includes("#spam")||e.includes("#inbox")||e.includes("#search")},{timeout:1e4}).then(()=>({method:"redirected",success:!0})).catch(()=>null),new Promise(e=>setTimeout(()=>e({method:"timeout",success:!0}),1e4))]);console.log("[v0] Verification result:",JSON.stringify(g,null,2)),console.log("[v0] Giving Gmail extra time to complete the operation..."),await this.behavior.waitRandom(3e3);let d=this.page.url();return console.log(`[v0] Final URL: ${d}`),console.log("[v0] ✓✓✓ Email reported to inbox successfully ✓✓✓"),{success:!0,emailDetails:s}}catch(e){console.error("[v0] ❌ Report to inbox failed"),console.error("[v0] Error:",e.message);try{let e=await this.page.screenshot({encoding:"base64"});console.log("[v0] Screenshot captured for debugging (base64 length):",e.length)}catch(e){console.error("[v0] Could not capture screenshot:",e)}return{success:!1,error:e.message}}}}},51806:(e,o,t)=>{t.d(o,{HumanBehavior:()=>a});class a{constructor(e){this.pattern=e}randomDelay(e,o){let t=e??this.pattern.action_delay.min;return Math.floor(Math.random()*((o??this.pattern.action_delay.max)-t+1))+t}async typeWithHumanSpeed(e,o){for(let t of e){await o.type(t);let e=this.randomDelay(this.pattern.typing_speed.min,this.pattern.typing_speed.max);await this.sleep(e)}}async randomPause(){if(this.pattern.random_pauses.enabled&&Math.random()<this.pattern.random_pauses.probability){let e=this.randomDelay(this.pattern.random_pauses.duration.min,this.pattern.random_pauses.duration.max);console.log(`[v0] Random pause: ${e}ms`),await this.sleep(e)}}async moveMouseNaturally(e,o,t){if(!this.pattern.mouse_movement.enabled){await e.mouse.move(o,t);return}let a={x:0,y:0},l=Math.floor(10*Math.random())+20,i=(o-a.x)/l,n=(t-a.y)/l;for(let o=0;o<l;o++){let t=a.x+i*o,l=a.y+n*o;await e.mouse.move(t,l),await this.sleep(10*Math.random()+5)}await e.mouse.move(o,t)}async scrollNaturally(e,o){if(!this.pattern.scroll_behavior.enabled){await e.evaluate(e=>window.scrollBy(0,e),o);return}let t=Math.floor(Math.abs(o)/100),a=o/t;for(let o=0;o<t;o++)await e.evaluate(e=>window.scrollBy(0,e),a),await this.sleep(this.randomDelay(50,150)),Math.random()<this.pattern.scroll_behavior.pause_probability&&await this.sleep(this.randomDelay(500,1500))}sleep(e){return new Promise(o=>setTimeout(o,e))}async waitRandom(e,o=20){let t=o/100*e;await this.sleep(e+(Math.random()*t*2-t))}}},53541:(e,o,t)=>{t.a(e,async(e,a)=>{try{t.d(o,{r:()=>r});var l=t(77250),i=t(83098),n=e([l]);l=(n.then?(await n)():n)[0];class r{constructor(e,o="cloud"){this.gologinInstance=null,this.gologinAPI=new i.X2(e),this.apiKey=e,this.mode=o}async validateProfile(e){try{return console.log(`[v0] Validating profile ${e} with GoLogin API...`),await this.gologinAPI.getProfileStatus(e),console.log(`[v0] ✓ Profile validation successful`),{valid:!0}}catch(e){if(console.error(`[v0] ❌ Profile validation failed:`,e.message),e.message.includes("404")||e.message.includes("not found")||e.message.includes("deleted"))return{valid:!1,error:"Profile has been deleted from GoLogin",errorType:"PROFILE_DELETED"};if(e.message.includes("401")||e.message.includes("unauthorized"))return{valid:!1,error:"GoLogin API authentication failed",errorType:"AUTH_ERROR"};return{valid:!1,error:`Profile validation failed: ${e.message}`,errorType:"VALIDATION_ERROR"}}}async launchProfile(e){console.log("[v0] ========================================"),console.log(`[v0] Launching GoLogin profile: ${e}`),console.log(`[v0] Mode: ${this.mode.toUpperCase()}`),console.log("[v0] ========================================");try{let o;if("local"===this.mode){console.log("[v0] Step 1: Starting profile locally using GoLogin SDK...");try{let{GologinApi:a}=await Promise.resolve().then(t.t.bind(t,85129,23));this.gologinInstance=a({token:this.apiKey}),console.log("[v0] Launching local profile...");let{browser:l}=await this.gologinInstance.launch({profileId:e});o=l.wsEndpoint(),console.log(`[v0] ✓ Local profile launched`),console.log("[v0] Using LOCAL mode - connecting to local Orbita browser")}catch(e){if(console.error(`[v0] ❌ Failed to load GoLogin SDK for local mode`),console.error(`[v0] Error: ${e.message}`),e.message&&(e.message.includes("404")||e.message.includes("not found")||e.message.includes("deleted")))throw Error("PROFILE_DELETED: Profile has been deleted from GoLogin");throw console.error("[v0] Local mode requires running in a Node.js environment with GoLogin Desktop app installed"),Error("Local mode is not available in this environment. Please use Cloud mode or run the application locally with Node.js.")}}else console.log("[v0] Step 1: Starting profile via GoLogin API..."),await this.gologinAPI.startProfile(e),o=`wss://cloudbrowser.gologin.com/connect?token=${this.apiKey}&profile=${e}`,console.log("[v0] Using CLOUD mode - connecting to GoLogin cloud browser");console.log("[v0] Step 2: Connecting to WebSocket..."),console.log(`[v0] WebSocket URL: ${o.replace(this.apiKey,"***API_KEY***")}`);let a=await l.default.connect({browserWSEndpoint:o,defaultViewport:null,protocolTimeout:3e5});console.log(`[v0] ✓ Connected to browser`),console.log("[v0] Step 3: Getting browser page...");let i=await a.pages();console.log(`[v0] Found ${i.length} open pages`);let n=i[0]||await a.newPage();return console.log("[v0] ========================================"),console.log(`[v0] ✓✓✓ Profile ${e} launched successfully in ${this.mode.toUpperCase()} mode ✓✓✓`),console.log("[v0] ========================================"),{browser:a,page:n,success:!0}}catch(t){console.error("[v0] ========================================"),console.error(`[v0] ❌ Failed to launch profile ${e}`),console.error(`[v0] Error type: ${t.name}`),console.error(`[v0] Error message: ${t.message}`),console.error("[v0] Error stack:",t.stack),console.error("[v0] ========================================");let o=t.message?.startsWith("PROFILE_DELETED:")?"PROFILE_DELETED":"LAUNCH_ERROR";return{browser:null,page:null,success:!1,error:t.message,errorType:o}}}async closeProfile(e,o){console.log(`[v0] Closing profile: ${e}`);try{if(o&&(console.log("[v0] Closing browser..."),await o.close(),console.log(`[v0] ✓ Browser closed`)),"cloud"===this.mode){console.log("[v0] Stopping profile via GoLogin API...");let o=0,t=null;for(;o<3;)try{await this.gologinAPI.stopProfile(e),console.log(`[v0] ✓✓✓ Profile ${e} closed successfully ✓✓✓`);break}catch(e){o++,t=e,console.log(`[v0] Stop attempt ${o}/3 failed: ${e.message}`),o<3&&(console.log("[v0] Waiting 2 seconds before retry..."),await new Promise(e=>setTimeout(e,2e3)))}3===o&&(console.error(`[v0] ⚠️ Could not stop profile via API after 3 attempts`),console.error(`[v0] Last error: ${t?.message}`),console.log("[v0] Profile may need to be manually stopped in GoLogin dashboard"))}else console.log(`[v0] ✓ Profile closed`);return{success:!0}}catch(o){return console.error(`[v0] ❌ Failed to close profile ${e}`),console.error("[v0] Error:",o.message),{success:!1,error:o.message}}}}a()}catch(e){a(e)}})},61978:(e,o,t)=>{t.a(e,async(e,a)=>{try{t.d(o,{Z:()=>p});var l=t(53541),i=t(36899),n=t(73554),r=t(79851),s=t(74933),c=t(24613),u=t(62263),g=t(19765),d=t(87481),m=t(85345),h=t(14155),v=e([l]);l=(v.then?(await v)():v)[0];class p{constructor(e,o,t){this.launcher=new l.r(e,o),this.behaviorPattern=t}async executeTask(e,o){console.log("[v0] ========================================"),console.log("[v0] Starting task execution"),console.log(`[v0] Task ID: ${e.id}`),console.log(`[v0] Task Type: ${e.task_type}`),console.log(`[v0] Profile: ${o.profile_name} (${o.profile_id})`),e.config?.count&&console.log(`[v0] Action Count: ${e.config.count}`),console.log("[v0] ========================================");let t=Date.now(),a={success:!1},l=null;try{console.log("[v0] Step 1: Launching profile...");let v=await this.launcher.launchProfile(o.profile_id);l=v.browser;let p=v.page;if(!v.success||!l||!p){let e=v.error||"Failed to launch profile";throw console.error(`[v0] ❌ Profile launch failed: ${e}`),Error(e)}console.log(`[v0] ✓ Profile launched successfully`),console.log("[v0] Step 2: Initializing Gmail automator...");let w=new i.GmailAutomator(p,this.behaviorPattern);switch(console.log(`[v0] ✓ Gmail automator ready`),console.log(`[v0] Step 3: Executing task type: ${e.task_type}`),console.log(`[v0] [DEBUG] Task type received: "${e.task_type}"`),console.log(`[v0] [DEBUG] Task type length: ${e.task_type.length}`),console.log("[v0] [DEBUG] Task type charCodes:",Array.from(e.task_type).map(e=>e.charCodeAt(0))),e.task_type){case"login":a=await (0,n.j)(w,p,e.config);break;case"check_inbox":a=await (0,r.O)(w,p);break;case"read_email":a=await (0,s.q)(w,p,e.config);break;case"star_email":a=await (0,c.U)(w,p,e.config);break;case"send_email":a=await (0,u.e)(w,p,e.config);break;case"reply_to_email":a=await (0,g.d)(w,p,e.config);break;case"report_to_inbox":a=await (0,d.c)(w,p,e.config);break;case"check_gmail_status":console.log("[v0] [DEBUG] Matched check_gmail_status case"),a=await (0,m.t)(w,e.config);break;case"setup_gmail":console.log("[v0] [DEBUG] Matched setup_gmail case"),a=await (0,h.J)(w,e.config);break;default:throw console.log("[v0] [DEBUG] No case matched, falling to default"),Error(`Unknown task type: ${e.task_type}`)}console.log(`[v0] ✓ Task execution result:`,a);let f=Date.now()-t;return console.log("[v0] ========================================"),console.log(`[v0] ✓ Task completed successfully in ${f}ms`),console.log("[v0] ========================================"),{success:a.success,duration:f,result:a}}catch(o){let e=Date.now()-t;return console.error("[v0] ========================================"),console.error(`[v0] ❌ Task execution failed after ${e}ms`),console.error(`[v0] Error type: ${o.name}`),console.error(`[v0] Error message: ${o.message}`),console.error("[v0] Error stack:",o.stack),console.error("[v0] ========================================"),{success:!1,duration:e,error:o.message}}finally{if(l){console.log("[v0] ========================================"),console.log("[v0] Waiting 20 seconds for GoLogin to synchronize profile data..."),console.log("[v0] This ensures cookies and session data are saved to the profile"),console.log("[v0] ========================================"),await new Promise(e=>setTimeout(e,2e4)),console.log("[v0] Step 4: Closing profile...");try{await this.launcher.closeProfile(o.profile_id,l),console.log(`[v0] ✓ Profile closed`)}catch(e){console.error(`[v0] ⚠️ Error during profile cleanup: ${e.message}`)}}}}}a()}catch(e){a(e)}})},85345:(e,o,t)=>{t.d(o,{t:()=>a});async function a(e,o){console.log("[v0] Starting Gmail account status check...");let a=o?.email,l=o?.password,i=a&&l;i?console.log(`[v0] Gmail credentials provided, will attempt auto-login for: ${a}`):console.log("[v0] No Gmail credentials provided, will only check current status");try{let o=e.page.browser();console.log("[v0] Opening new tab for Gmail check...");let n=await o.newPage();try{console.log("[v0] Navigating to Gmail..."),await n.goto("https://mail.google.com/mail/u/0/#inbox",{waitUntil:"networkidle2",timeout:3e4}),await new Promise(e=>setTimeout(e,3e3)),console.log("[v0] Analyzing initial Gmail page state...");let e=await n.evaluate(()=>{let e=!!document.querySelector('input[type="email"]')||!!document.querySelector('input[type="password"]'),o=!!document.querySelector('[gh="cm"]')||!!document.querySelector('[aria-label*="Inbox"]')||document.querySelectorAll("tr.zA").length>0;return{hasLoginForm:e,hasGmailUI:o,url:window.location.href}});console.log("[v0] Initial state:",JSON.stringify(e,null,2));let o=!1,r=!1;if(e.hasLoginForm&&i){console.log("[v0] Login form detected, attempting to sign in..."),o=!0;try{let{GmailAutomator:e}=await Promise.resolve().then(t.bind(t,36899)),{HumanBehavior:o}=await Promise.resolve().then(t.bind(t,51806)),i=new e(n,{typing_speed:{min:100,max:300},action_delay:{min:500,max:2e3},mouse_movement:{enabled:!0,speed:"medium"},scroll_behavior:{enabled:!0,pause_probability:.3},random_pauses:{enabled:!0,probability:.2,duration:{min:1e3,max:3e3}}}),s=await i.login(a,l);s.success?(console.log("[v0] ✓ Login successful!"),r=!0,await new Promise(e=>setTimeout(e,5e3))):(console.log(`[v0] ⚠️ Login failed: ${s.error}`),r=!1)}catch(e){console.error("[v0] ❌ Login attempt failed:",e.message),r=!1}}console.log("[v0] Analyzing final Gmail page state...");let s=await n.evaluate(()=>{let e=window.location.href,o=document.title,t=!!document.querySelector('[gh="cm"]'),a=!!document.querySelector('[aria-label*="Inbox"]')||!!document.querySelector('[title*="Inbox"]')||!!document.querySelector('[aria-label*="Bo\xeete de r\xe9ception"]'),l=!!document.querySelector('img[alt*="Gmail"]'),i=document.querySelectorAll("tr.zA").length>0,n=!!document.querySelector('input[type="email"]'),r=!!document.querySelector('input[type="password"]'),s="";for(let e of['[jsname="B34EJ"]',".dEOOab",'[role="alert"]',".error-msg"]){let o=document.querySelector(e);if(o&&o.textContent){s=o.textContent.trim();break}}let c=document.body.textContent?.includes("blocked")||document.body.textContent?.includes("suspended")||document.body.textContent?.includes("disabled")||document.body.textContent?.includes("bloqu\xe9")||document.body.textContent?.includes("suspendu")||!1,u=document.body.textContent?.includes("verify")||document.body.textContent?.includes("verification")||document.body.textContent?.includes("v\xe9rif")||document.body.textContent?.includes("unusual activity")||document.body.textContent?.includes("activit\xe9 inhabituelle")||!1,g=document.body.textContent?.includes("password")||document.body.textContent?.includes("mot de passe")||document.body.textContent?.includes("sign in")||document.body.textContent?.includes("connexion")||!1,d=!!document.querySelector("[data-challengetype]")||!!document.querySelector('[id*="challenge"]')||!!document.querySelector('[name="totpPin"]');return{url:e,title:o,hasComposeButton:t,hasInboxLabel:a,hasGmailLogo:l,hasEmailRows:i,hasLoginForm:n||r,hasEmailInput:n,hasPasswordInput:r,errorText:s,hasBlockedMessage:c,hasVerificationMessage:u,hasPasswordMessage:g,has2FAPrompt:d,bodyTextSample:document.body.textContent?.substring(0,500)||""}});console.log("[v0] Final page state analysis:",JSON.stringify(s,null,2));let c="unknown",u="",g=(s.hasComposeButton||s.hasInboxLabel||s.hasEmailRows)&&!s.hasLoginForm;return g?(c="ok",u=o?"Successfully logged in to Gmail":"Gmail account is working normally (already logged in)"):s.hasLoginForm||s.hasPasswordMessage&&!g?(c="password_required",u=o?"Login failed - incorrect password or additional verification required":"Account requires login or password"):s.has2FAPrompt?(c="verification_required",u="Account requires verification or 2FA"):s.hasVerificationMessage&&!g?(c="verification_required",u="Account requires verification"):s.hasBlockedMessage&&!g?(c="blocked",u="Gmail account is blocked or suspended"):s.errorText?(c="error",u=`Error: ${s.errorText}`):(c="unknown",u="Unable to determine account status"),console.log(`[v0] ✓ Gmail status check complete: ${c}`),o&&console.log(`[v0] Login attempt result: ${r?"SUCCESS":"FAILED"}`),await n.close(),{success:!0,status:c,message:u,details:{hasInbox:s.hasInboxLabel||s.hasEmailRows,hasComposeButton:s.hasComposeButton,hasLoginForm:s.hasLoginForm,errorText:s.errorText||void 0,url:s.url,loginAttempted:o,loginSuccess:r}}}catch(e){try{await n.close()}catch(e){console.log("[v0] Could not close new tab:",e)}throw e}}catch(e){return console.error("[v0] ❌ Gmail status check failed"),console.error("[v0] Error:",e.message),{success:!1,status:"error",message:`Failed to check Gmail status: ${e.message}`}}}},79851:(e,o,t)=>{t.d(o,{O:()=>a});async function a(e,o){return console.log("[v0] Checking inbox..."),await e.checkInbox()}},73554:(e,o,t)=>{t.d(o,{j:()=>a});async function a(e,o,t={}){let a;-1===t.duration||t.waitForManualClose?(a=-1,console.log("[v0] Manual close mode enabled - profile will stay open until you close it manually")):t.minDuration&&t.maxDuration?(a=Math.floor(Math.random()*(t.maxDuration-t.minDuration+1))+t.minDuration,console.log(`[v0] Using random duration: ${a}s (range: ${t.minDuration}-${t.maxDuration}s)`)):a=t.duration||10,-1!==a&&console.log(`[v0] Opening Gmail and keeping profile open for ${a} seconds...`);try{console.log("[v0] Navigating to Gmail inbox..."),await o.goto("https://mail.google.com/mail/u/0/#inbox",{waitUntil:"networkidle2",timeout:3e4}),await new Promise(e=>setTimeout(e,3e3)),console.log("[v0] Checking if logged into Gmail...");let e=await o.evaluate(()=>{let e=!!document.querySelector('[gh="cm"]'),o=!!document.querySelector('[aria-label*="Inbox"]')||!!document.querySelector('[title*="Inbox"]');document.querySelector('img[alt*="Gmail"]');let t=!!document.querySelector('input[type="email"]')||!!document.querySelector('input[type="password"]');return(e||o)&&!t});if(e?console.log(`[v0] ✓ User is logged in to Gmail`):console.log(`[v0] ⚠️ User is not logged in to Gmail`),-1===a)return console.log("[v0] Profile is now open. Close the browser window manually to continue to the next profile."),new Promise(t=>{o.browser().on("disconnected",()=>{console.log(`[v0] ✓ Browser closed manually by user`),t({success:!0,message:"Profile closed manually by user",duration:-1,loggedIn:e,manualClose:!0})}),o.on("close",()=>{console.log(`[v0] ✓ Page closed`),t({success:!0,message:"Profile closed manually by user",duration:-1,loggedIn:e,manualClose:!0})})});return console.log(`[v0] Waiting for ${a} seconds before closing...`),await new Promise(e=>setTimeout(e,1e3*a)),console.log(`[v0] ✓ Duration completed`),{success:!0,message:`Profile kept open for ${a} seconds`,duration:a,loggedIn:e}}catch(e){return console.error("[v0] ❌ Login task failed"),console.error("[v0] Error:",e.message),{success:!1,error:e.message}}}},74933:(e,o,t)=>{t.d(o,{q:()=>a});async function a(e,o,t){let a=t?.count||1;console.log(`[v0] Reading ${a} email(s)...`),await e.ensureGmailLoaded();let l=[];for(let o=0;o<a;o++){console.log(`[v0] Reading email ${o+1}/${a} at index ${o}`);let t=await e.readEmail(o);if(l.push(t),!t.success){console.log(`[v0] Failed to read email ${o+1}, stopping...`);break}}return{success:l.every(e=>e.success),count:l.filter(e=>e.success).length,results:l}}},19765:(e,o,t)=>{t.d(o,{d:()=>a});async function a(e,o,t){if(!t?.searchFrom||!t?.replyMessage)throw Error("Reply configuration incomplete (missing searchFrom or replyMessage)");console.log(`[v0] Searching for emails from: ${t.searchFrom}`),await e.ensureGmailLoaded();let a=`from:${t.searchFrom}`,l=await e.searchEmails(a);if(!l.success||0===l.count)throw Error(`No emails found from ${t.searchFrom}`);console.log(`[v0] Found ${l.count} email(s) in search results`);let i=t?.count||t.action_count||1;console.log(`[v0] Replying to ${i} email(s)...`);let n=[];for(let o=0;o<Math.min(i,l.count||0);o++){console.log(`[v0] Replying to email ${o+1}/${i} at index ${o}`);let a=await e.replyToEmail(o,t.replyMessage);if(n.push(a),!a.success){console.log(`[v0] Failed to reply to email at index ${o}, stopping...`);break}console.log(`[v0] ✓ Successfully replied to email ${o+1}/${i}`)}let r=n.filter(e=>e.success).length;return{success:r>0,count:r,requested:i,results:n}}},87481:(e,o,t)=>{t.d(o,{c:()=>a});async function a(e,o,t){if(console.log("[v0] Handling report to inbox task"),!t.search_query)throw Error("search_query is required for report_to_inbox task");console.log(`[v0] Search query: ${t.search_query}`),await e.ensureGmailLoaded();let a=await e.reportToInbox(t.search_query);if(!a.success)throw Error(a.error||"Failed to report email to inbox");return{success:!0,emailDetails:a.emailDetails}}},62263:(e,o,t)=>{t.d(o,{e:()=>a});async function a(e,o,t){if(!t?.to||!t?.subject||!t?.body)throw Error("Email configuration incomplete (missing to, subject, or body)");return console.log(`[v0] Sending email to: ${t.to}`),await e.ensureGmailLoaded(),await e.sendEmail(t.to,t.subject,t.body)}},14155:(e,o,t)=>{t.d(o,{J:()=>a});async function a(e,o){console.log("[v0] Starting Gmail account setup...");let a=o?.email,l=o?.password,i=o?.recovery,n=a&&l;n?(console.log(`[v0] Gmail credentials provided, will attempt auto-login for: ${a}`),i&&console.log(`[v0] Recovery email available: ${i}`)):console.log("[v0] No Gmail credentials provided, will only check current status");try{let o=e.page.browser();console.log("[v0] Opening new tab for Gmail setup...");let r=await o.newPage();try{console.log("[v0] Navigating to Gmail..."),await r.goto("https://mail.google.com/mail/u/0/#inbox",{waitUntil:"networkidle2",timeout:3e4}),await new Promise(e=>setTimeout(e,3e3)),console.log("[v0] Analyzing initial Gmail page state...");let e=await r.evaluate(()=>{let e=!!document.querySelector('input[type="email"]')||!!document.querySelector('input[type="password"]'),o=!!document.querySelector('[gh="cm"]')||!!document.querySelector('[aria-label*="Inbox"]')||document.querySelectorAll("tr.zA").length>0;return{hasLoginForm:e,hasGmailUI:o,url:window.location.href}});console.log("[v0] Initial state:",JSON.stringify(e,null,2));let o=!1,s=!1;if(e.hasLoginForm&&n){console.log("[v0] Login form detected, attempting to sign in..."),o=!0;try{let{GmailAutomator:e}=await Promise.resolve().then(t.bind(t,36899)),o=new e(r,{typing_speed:{min:100,max:300},action_delay:{min:500,max:2e3},mouse_movement:{enabled:!0,speed:"medium"},scroll_behavior:{enabled:!0,pause_probability:.3},random_pauses:{enabled:!0,probability:.2,duration:{min:1e3,max:3e3}}}),n=await o.login(a,l,i);n.success?(console.log("[v0] ✓ Login successful!"),s=!0,console.log("[v0] ========================================"),console.log("[v0] Waiting 45 seconds for browser to save session data..."),console.log("[v0] This allows Chrome to write cookies and localStorage to disk"),console.log("[v0] GoLogin will then sync this data to the profile"),console.log("[v0] ========================================"),await new Promise(e=>setTimeout(e,45e3)),console.log("[v0] ✓ Session data should now be saved to browser profile")):(console.log(`[v0] ⚠️ Login failed: ${n.error}`),s=!1)}catch(e){console.error("[v0] ❌ Login attempt failed:",e.message),s=!1}}console.log("[v0] Analyzing final Gmail page state...");let c=await r.evaluate(()=>{let e=window.location.href,o=document.title,t=!!document.querySelector('[gh="cm"]'),a=!!document.querySelector('[aria-label*="Inbox"]')||!!document.querySelector('[title*="Inbox"]')||!!document.querySelector('[aria-label*="Bo\xeete de r\xe9ception"]')||!!document.querySelector('[aria-label*="صندوق الوارد"]'),l=!!document.querySelector('img[alt*="Gmail"]'),i=document.querySelectorAll("tr.zA").length>0,n=!!document.querySelector('input[type="email"]'),r=!!document.querySelector('input[type="password"]'),s="";for(let e of['[jsname="B34EJ"]',".dEOOab",'[role="alert"]',".error-msg","[data-error]",".Ekjuhf"]){let o=document.querySelector(e);if(o&&o.textContent){s=o.textContent.trim();break}}let c=document.body.textContent?.toLowerCase()||"",u=c.includes("wrong password")||c.includes("incorrect password")||c.includes("mot de passe incorrect")||c.includes("كلمة مرور خاطئة")||c.includes("couldn't sign you in")||c.includes("couldn't find your google account"),g=c.includes("blocked")||c.includes("suspended")||c.includes("disabled")||c.includes("bloqu\xe9")||c.includes("suspendu")||c.includes("محظور")||c.includes("معطل"),d=c.includes("verify")||c.includes("verification")||c.includes("v\xe9rif")||c.includes("unusual activity")||c.includes("activit\xe9 inhabituelle")||c.includes("التحقق")||c.includes("نشاط غير عادي"),m=c.includes("password was changed")||c.includes("mot de passe a \xe9t\xe9 modifi\xe9")||c.includes("تم تغيير كلمة المرور"),h=c.includes("too many attempts")||c.includes("try again later")||c.includes("trop de tentatives")||c.includes("محاولات كثيرة جداً"),v=!!document.querySelector("[data-challengetype]")||!!document.querySelector('[id*="challenge"]')||!!document.querySelector('[name="totpPin"]'),p=e.includes("/signin/rejected")||e.includes("/signin/challenge");return{url:e,title:o,hasComposeButton:t,hasInboxLabel:a,hasGmailLogo:l,hasEmailRows:i,hasLoginForm:n||r,hasEmailInput:n,hasPasswordInput:r,errorText:s,isRejectedPage:p,hasWrongPasswordMessage:u,hasBlockedMessage:g,hasVerificationMessage:d,hasPasswordChangeMessage:m,hasTooManyAttemptsMessage:h,has2FAPrompt:v}});console.log("[v0] Final page state analysis:",JSON.stringify(c,null,2));let u="unknown",g="";return(c.hasComposeButton||c.hasInboxLabel||c.hasEmailRows)&&!c.hasLoginForm?(u="ok",g=o?"Successfully logged in to Gmail and account is working":"Gmail account is working normally (already logged in)"):c.isRejectedPage?(u="blocked",g="Google rejected the login attempt - Account may be flagged or requires additional verification"):c.hasWrongPasswordMessage?(u="password_required",g="Login failed - Wrong password or email address"):c.hasPasswordChangeMessage?(u="password_required",g="Login failed - Password was recently changed, please wait and try again"):c.hasTooManyAttemptsMessage?(u="blocked",g="Too many login attempts - Account temporarily locked, please try again later"):c.hasBlockedMessage?(u="blocked",g="Gmail account is blocked, suspended, or disabled"):c.has2FAPrompt?(u="verification_required",g="Account requires 2-Factor Authentication (2FA) verification"):c.hasVerificationMessage?(u="verification_required",g="Account requires verification due to unusual activity"):c.hasLoginForm?(u="password_required",g=o?"Login failed - Please check credentials or account may require additional verification":"Account requires login credentials"):c.errorText?(u="error",g=`Gmail error: ${c.errorText}`):(u="unknown",g="Unable to determine Gmail account status"),console.log(`[v0] ✓ Gmail setup complete: ${u}`),console.log(`[v0] Message: ${g}`),o&&console.log(`[v0] Login attempt result: ${s?"SUCCESS":"FAILED"}`),await r.close(),{success:!0,status:u,message:g,details:{hasInbox:c.hasInboxLabel||c.hasEmailRows,hasComposeButton:c.hasComposeButton,hasLoginForm:c.hasLoginForm,errorText:c.errorText||void 0,url:c.url,loginAttempted:o,loginSuccess:s}}}catch(e){try{await r.close()}catch(e){console.log("[v0] Could not close new tab:",e)}throw e}}catch(e){return console.error("[v0] ❌ Gmail setup failed"),console.error("[v0] Error:",e.message),{success:!1,status:"error",message:`Failed to setup Gmail: ${e.message}`}}}},24613:(e,o,t)=>{t.d(o,{U:()=>a});async function a(e,o,t){let a=t?.count||1;console.log(`[v0] Starring ${a} email(s)...`),await e.ensureGmailLoaded();let l=[],i=0,n=0;for(;n<a&&i<50;){console.log(`[v0] Attempting to star email ${n+1}/${a} at index ${i}`);let o=await e.starEmail(i);if(!o.success){console.log(`[v0] Failed to star email at index ${i}, stopping...`),l.push(o);break}if(o.alreadyStarred){console.log(`[v0] Email at index ${i} was already starred, moving to next email...`),i++;continue}l.push(o),n++,i++,console.log(`[v0] ✓ Successfully starred ${n}/${a} emails`)}return n<a&&i>=50&&console.log(`[v0] ⚠️ Reached maximum attempts (50), only starred ${n}/${a} emails`),{success:n>0,count:n,requested:a,results:l}}},99064:(e,o,t)=>{t.d(o,{S:()=>i});var a=t(61657);let l=null;function i(){if(l)return l;if(!process.env.SUPABASE_SERVICE_ROLE_KEY)throw Error("SUPABASE_SERVICE_ROLE_KEY is not set");return l=(0,a.eI)("https://umhdnhckxgqywxgpybgo.supabase.co",process.env.SUPABASE_SERVICE_ROLE_KEY,{auth:{autoRefreshToken:!1,persistSession:!1}})}},19692:(e,o,t)=>{t.d(o,{t:()=>i});var a=t(67721),l=t(71615);async function i(){let e=await (0,l.cookies)();return(0,a.createServerClient)("https://umhdnhckxgqywxgpybgo.supabase.co","eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVtaGRuaGNreGdxeXd4Z3B5YmdvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTk0MDA1NzYsImV4cCI6MjA3NDk3NjU3Nn0.sodO3ZUaTWDxBBZitsrc_j3SUmVWBNlAsQoDAdzs8mI",{cookies:{getAll:()=>e.getAll(),setAll(o){try{o.forEach(({name:o,value:t,options:a})=>e.set(o,t,a))}catch{}}}})}},97957:(e,o,t)=>{t.d(o,{B:()=>a});function a(e){return"1"===process.env.VERCEL||process.env.VERCEL_ENV?(console.log("[v0] Running on Vercel - forcing cloud mode"),"cloud"):(console.log(`[v0] Running locally - using user preference: ${e}`),e)}}};