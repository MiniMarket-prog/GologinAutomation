"use strict";(()=>{var e={};e.id=1220,e.ids=[1220],e.modules={85129:e=>{e.exports=require("gologin")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},68621:e=>{e.exports=require("punycode")},76162:e=>{e.exports=require("stream")},17360:e=>{e.exports=require("url")},71568:e=>{e.exports=require("zlib")},77250:e=>{e.exports=import("puppeteer-core")},43052:(e,o,t)=>{t.a(e,async(e,s)=>{try{t.r(o),t.d(o,{originalPathname:()=>f,patchFetch:()=>c,requestAsyncStorage:()=>g,routeModule:()=>u,serverHooks:()=>p,staticGenerationAsyncStorage:()=>d});var r=t(49303),a=t(88716),i=t(60670),n=t(51212),l=e([n]);n=(l.then?(await l)():l)[0];let u=new r.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/queue/process/route",pathname:"/api/queue/process",filename:"route",bundlePath:"app/api/queue/process/route"},resolvedPagePath:"C:\\Users\\HP\\Documents\\GitHub\\GologinAutomation\\gologin\\app\\api\\queue\\process\\route.ts",nextConfigOutput:"standalone",userland:n}),{requestAsyncStorage:g,staticGenerationAsyncStorage:d,serverHooks:p}=u,f="/api/queue/process/route";function c(){return(0,i.patchFetch)({serverHooks:p,staticGenerationAsyncStorage:d})}s()}catch(e){s(e)}})},51212:(e,o,t)=>{t.a(e,async(e,s)=>{try{t.r(o),t.d(o,{POST:()=>c});var r=t(19692),a=t(33870),i=t(35018),n=t(87070),l=e([a]);async function c(e){try{let e=await (0,r.t)(),{data:o,error:t}=await e.from("settings").select("value").eq("key","gologin_api_key").single();if(t||!o?.value)return n.NextResponse.json({error:"GoLogin API key not found. Please save it in Settings first."},{status:400});let s=new a.w(o.value);(0,i.th)(s);try{await s.processPendingTasks()}finally{(0,i.th)(null)}return n.NextResponse.json({success:!0,message:"Queue processed"})}catch(e){return console.error("[v0] Error processing queue:",e),(0,i.th)(null),n.NextResponse.json({error:e.message},{status:500})}}a=(l.then?(await l)():l)[0],s()}catch(e){s(e)}})},35018:(e,o,t)=>{t.d(o,{ON:()=>a,th:()=>r});let s=null;function r(e){s=e}function a(){return!!s&&(s.requestStop(),!0)}},33870:(e,o,t)=>{t.a(e,async(e,s)=>{try{t.d(o,{w:()=>c});var r=t(19692),a=t(99064),i=t(61978),n=t(97957),l=e([i]);i=(l.then?(await l)():l)[0];class c{constructor(e){this.isProcessing=!1,this.shouldStop=!1,this.gologinApiKey=e}requestStop(){console.log("[v0] ⚠️ Stop requested for task queue"),this.shouldStop=!0}async processPendingTasks(){if(this.isProcessing){console.log("[v0] Queue already processing, skipping");return}this.isProcessing=!0,this.shouldStop=!1,console.log("[v0] ========================================"),console.log("[v0] Starting task queue processing"),console.log("[v0] ========================================");try{let e=await (0,r.t)();console.log("[v0] Fetching pending tasks...");let{data:o,error:t}=await e.from("automation_tasks").select("*").eq("status","pending").lte("scheduled_at",new Date().toISOString()).order("priority",{ascending:!1}).order("scheduled_at",{ascending:!0}).limit(10);if(t)throw console.error("[v0] ❌ Error fetching tasks:",t),t;if(!o||0===o.length){console.log("[v0] No pending tasks to process");return}console.log(`[v0] ✓ Found ${o.length} pending tasks`),o.forEach((e,o)=>{console.log(`[v0]   ${o+1}. ${e.task_type} (ID: ${e.id})`)}),console.log("[v0] Fetching behavior pattern...");let{data:s,error:a}=await e.from("behavior_patterns").select("*").eq("is_default",!0).single();if(a)throw console.error("[v0] ❌ Error fetching behavior pattern:",a),a;console.log("[v0] ✓ Behavior pattern loaded"),console.log("[v0] Fetching GoLogin mode setting...");let{data:i}=await e.from("settings").select("value").eq("key","gologin_mode").single(),l=i?.value||"cloud",c=(0,n.B)(l);for(let e of(console.log(`[v0] ✓ GoLogin mode: ${c}`),o)){if(this.shouldStop){console.log("[v0] ⚠️ Stop requested, aborting remaining tasks"),console.log("[v0] Remaining tasks will stay in pending status");break}await this.processTask(e,s,c)}console.log("[v0] ========================================"),console.log("[v0] ✓ Task queue processing completed"),console.log("[v0] ========================================")}catch(e){console.error("[v0] ========================================"),console.error("[v0] ❌ Error processing task queue"),console.error("[v0] Error:",e.message),console.error("[v0] ========================================")}finally{this.isProcessing=!1,this.shouldStop=!1}}async processTask(e,o,t){console.log("[v0] ========================================"),console.log(`[v0] Processing task ${e.id}`),console.log(`[v0] Task type: ${e.task_type}`),console.log("[v0] ========================================");try{let s=await (0,r.t)();console.log(`[v0] Fetching profile ${e.profile_id}...`);let{data:n,error:l}=await s.from("gologin_profiles").select("*").eq("id",e.profile_id);if(l)throw console.error("[v0] ❌ Error fetching profile:",l),Error(`Database error fetching profile: ${l.message}`);if(!n||0===n.length)throw console.error(`[v0] ❌ Profile ${e.profile_id} not found or not accessible`),Error(`Profile ${e.profile_id} not found. It may have been deleted or you don't have access to it.`);if(n.length>1)throw console.error(`[v0] ❌ Multiple profiles found with ID ${e.profile_id}`),Error("Data integrity error: Multiple profiles found with the same ID");let c=n[0];if(console.log(`[v0] ✓ Profile loaded: ${c.profile_name}`),"running"===c.status){console.log(`[v0] ⚠️ Profile ${c.profile_name} is already running, skipping task`);return}if("deleted"===c.status){console.log(`[v0] ⚠️ Profile ${c.profile_name} is marked as deleted, failing task`),await s.from("automation_tasks").update({status:"failed",completed_at:new Date().toISOString(),error_message:"Profile has been deleted from GoLogin"}).eq("id",e.id);return}console.log("[v0] Updating task status to 'running'..."),await s.from("automation_tasks").update({status:"running",started_at:new Date().toISOString()}).eq("id",e.id),console.log("[v0] ✓ Task status updated"),console.log("[v0] Updating profile status to 'running'..."),await s.from("gologin_profiles").update({status:"running"}).eq("id",c.id),console.log("[v0] ✓ Profile status updated"),console.log("[v0] Executing task...");let u=new i.Z(this.gologinApiKey,t,o.config),g=await u.executeTask(e,c);if(console.log("[v0] Task execution result:",{success:g.success,duration:g.duration,error:g.error||"none"}),g.success||"PROFILE_DELETED"!==g.errorType||(console.log("[v0] ⚠️ Profile has been deleted from GoLogin, marking profile as deleted"),await s.from("gologin_profiles").update({status:"deleted",last_run:new Date().toISOString()}).eq("id",c.id),console.log("[v0] Failing all pending tasks for deleted profile..."),await s.from("automation_tasks").update({status:"failed",completed_at:new Date().toISOString(),error_message:"Profile has been deleted from GoLogin"}).eq("profile_id",c.id).eq("status","pending")),console.log("[v0] [DEBUG] Checking if task is check_gmail_status..."),console.log("[v0] [DEBUG] Task type:",e.task_type),console.log("[v0] [DEBUG] Result object:",JSON.stringify(g,null,2)),"check_gmail_status"===e.task_type&&g.result){console.log("[v0] [DEBUG] Gmail status check detected, preparing profile update..."),console.log("[v0] [DEBUG] Result.result:",JSON.stringify(g.result,null,2));let e=g.result.status,o=g.result.message;console.log("[v0] [DEBUG] Updating profile with Gmail status:",{gmail_status:e,gmail_status_checked_at:new Date().toISOString(),gmail_status_message:o});let t=(0,a.S)(),{data:s,error:r}=await t.from("gologin_profiles").update({gmail_status:e,gmail_status_checked_at:new Date().toISOString(),gmail_status_message:o}).eq("id",c.id).select();r?console.error("[v0] [DEBUG] ❌ Error updating Gmail status:",r):console.log("[v0] [DEBUG] ✓ Gmail status updated successfully:",s)}else console.log("[v0] [DEBUG] Not a Gmail status check task or no result data");console.log("[v0] Updating task final status..."),await s.from("automation_tasks").update({status:g.success?"completed":"failed",completed_at:new Date().toISOString(),error_message:g.error||null}).eq("id",e.id),console.log(`[v0] ✓ Task marked as ${g.success?"completed":"failed"}`),"PROFILE_DELETED"!==g.errorType&&(console.log("[v0] Updating profile final status..."),await s.from("gologin_profiles").update({status:g.success?"idle":"error",last_run:new Date().toISOString()}).eq("id",c.id),console.log(`[v0] ✓ Profile status updated to ${g.success?"idle":"error"}`)),console.log("[v0] Creating activity log...");let d=(0,a.S)(),{error:p}=await d.from("activity_logs").insert({profile_id:c.id,task_id:e.id,action:e.task_type,details:g.result||{},duration_ms:g.duration,success:g.success});p?console.error("[v0] ❌ Error creating activity log:",p):console.log("[v0] ✓ Activity log created successfully"),console.log("[v0] ========================================"),console.log(`[v0] ${g.success?"✓✓✓":"❌"} Task ${e.id} ${g.success?"completed successfully":"failed"}`),!g.success&&g.error&&console.log(`[v0] Error: ${g.error}`),console.log("[v0] ========================================")}catch(t){console.error("[v0] ========================================"),console.error(`[v0] ❌ Error processing task ${e.id}`),console.error(`[v0] Error type: ${t.name}`),console.error(`[v0] Error message: ${t.message}`),console.error("[v0] Error stack:",t.stack),console.error("[v0] ========================================");let o=await (0,r.t)();await o.from("automation_tasks").update({status:"failed",completed_at:new Date().toISOString(),error_message:t.message}).eq("id",e.id),await o.from("gologin_profiles").update({status:"error"}).eq("id",e.profile_id)}}async scheduleRecurringTask(e,o,t,s){let a=await (0,r.t)(),{data:i}=await a.auth.getUser();if(!i.user)throw Error("Unauthorized");let{data:n,error:l}=await a.from("automation_tasks").insert({profile_id:e,task_type:o,config:s||{},scheduled_at:new Date().toISOString(),created_by:i.user.id}).select().single();if(l)throw l;return n}}s()}catch(e){s(e)}})}};var o=require("../../../../webpack-runtime.js");o.C(e);var t=e=>o(o.s=e),s=o.X(0,[8948,4526,9702,5972,7403],()=>t(43052));module.exports=s})();