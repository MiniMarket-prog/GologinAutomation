"use strict";(()=>{var e={};e.id=8972,e.ids=[8972],e.modules={72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},68621:e=>{e.exports=require("punycode")},76162:e=>{e.exports=require("stream")},17360:e=>{e.exports=require("url")},71568:e=>{e.exports=require("zlib")},32252:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>v,patchFetch:()=>w,requestAsyncStorage:()=>f,routeModule:()=>m,serverHooks:()=>h,staticGenerationAsyncStorage:()=>_});var s={};r.r(s),r.d(s,{GET:()=>g,POST:()=>p});var o=r(49303),a=r(88716),l=r(60670),i=r(19692),n=r(99064),u=r(46569),d=r(87070),c=r(83098);async function g(e){try{let t=await (0,u.GJ)();console.log("[v0] Admin status:",t);let r=t?(0,n.S)():await (0,i.t)(),{data:{user:s}}=await (await (0,i.t)()).auth.getUser();if(!s)return d.NextResponse.json({error:"Unauthorized"},{status:401});let{searchParams:o}=new URL(e.url),a=Number.parseInt(o.get("page")||"1"),l=Number.parseInt(o.get("limit")||"50"),g=o.get("status"),p=o.get("search"),m=o.get("gmailStatus"),f=o.get("folder");console.log("[v0] Query params:",{page:a,limit:l,status:g,search:p,gmailStatus:m,folder:f}),console.log("[v0] Fetching profiles from GoLogin API...");let _=await c.gologinAPI.getProfiles();(await c.gologinAPI.getFolders()).map(e=>[e.id||e._id,e.name||"Uncategorized"]),console.log(`[v0] ✓ Fetched ${_.length} profiles from GoLogin`);let h=_;f&&(console.log(`[v0] Filtering profiles by folder: ${f}`),h=_.filter(e=>{let t=e.folders||[];return(t.length>0?t[0]:"Uncategorized")===f}),console.log(`[v0] ✓ Found ${h.length} profiles in folder "${f}"`));let v=h.map(e=>e.id),{data:w}=await r.from("gologin_profiles").select("*").in("profile_id",v),x=new Map(w?.map(e=>[e.profile_id,e])||[]),y=h.map(e=>{let t=x.get(e.id),r=e.folders||[],s=r.length>0?r[0]:"Uncategorized";return{id:t?.id||null,profile_id:e.id,profile_name:e.name||`Profile ${e.id}`,gmail_email:t?.gmail_email||null,gmail_password:t?.gmail_password||null,recovery_email:t?.recovery_email||null,folder_name:s,status:t?.status||"idle",gmail_status:t?.gmail_status||null,gmail_status_checked_at:t?.gmail_status_checked_at||null,gmail_status_message:t?.gmail_status_message||null,assigned_user_id:t?.assigned_user_id||null,created_at:t?.created_at||e.createdAt||null,updated_at:t?.updated_at||e.updatedAt||null,last_run:t?.last_run||null,is_deleted:t?.is_deleted||!1,deleted_at:t?.deleted_at||null}});if(t)console.log(`[v0] Admin user - showing all ${y.length} profiles`);else{console.log(`[v0] Applying folder-based filter for: ${s.email}`);let{data:e,error:t}=await r.from("users").select("id").eq("email",s.email).single();if(console.log("[v0] User lookup result:",{dbUser:e,userError:t}),e){let{data:t,error:o}=await r.from("user_folder_assignments").select("folder_name").eq("user_id",e.id);if(console.log("[v0] User folders lookup:",{userFolders:t,foldersError:o}),t&&t.length>0){let e=new Set(t.map(e=>e.folder_name));console.log(`[v0] User has access to ${e.size} folders:`,Array.from(e));let r=y.length;y=y.filter(t=>{let r=e.has(t.folder_name);return r||console.log(`[v0] Excluding profile ${t.profile_id}: folder "${t.folder_name}" not in user's allowed folders`),r}),console.log(`[v0] ✓ Filtered from ${r} to ${y.length} profiles based on folder access`)}else console.log(`[v0] ⚠ User ${s.email} has no folder assignments, returning empty profiles`),y=[]}else console.log(`[v0] ⚠ User ${s.email} not found in database, returning empty profiles`),y=[]}if(g&&(y=y.filter(e=>e.status===g)),m&&(y="unchecked"===m?y.filter(e=>!e.gmail_status):y.filter(e=>e.gmail_status===m)),p){let e=p.toLowerCase();y=y.filter(t=>t.profile_name?.toLowerCase().includes(e)||t.gmail_email?.toLowerCase().includes(e)||t.folder_name?.toLowerCase().includes(e))}let A=y.length,I=(a-1)*l,U=y.slice(I,I+l);return console.log(`[v0] Returning ${U.length} profiles (${A} total after filters)`),d.NextResponse.json({profiles:U,total:A,page:a,limit:l,totalPages:Math.ceil(A/l)})}catch(e){return console.error("[v0] Error fetching profiles:",e),d.NextResponse.json({error:e.message},{status:500})}}async function p(e){try{let t=await (0,i.t)(),r=await e.json(),{data:s}=await t.auth.getUser();if(!s.user)return d.NextResponse.json({error:"Unauthorized"},{status:401});let{data:o,error:a}=await t.from("gologin_profiles").insert({profile_id:r.profile_id,profile_name:r.profile_name,gmail_email:r.gmail_email,gmail_password:r.gmail_password,assigned_user_id:r.assigned_user_id||s.user.id}).select().single();if(a)throw a;return d.NextResponse.json(o)}catch(e){return console.error("[v0] Error creating profile:",e),d.NextResponse.json({error:e.message},{status:500})}}let m=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/profiles/route",pathname:"/api/profiles",filename:"route",bundlePath:"app/api/profiles/route"},resolvedPagePath:"C:\\Users\\HP\\Documents\\GitHub\\GologinAutomation\\gologin\\app\\api\\profiles\\route.ts",nextConfigOutput:"standalone",userland:s}),{requestAsyncStorage:f,staticGenerationAsyncStorage:_,serverHooks:h}=m,v="/api/profiles/route";function w(){return(0,l.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:_})}},99064:(e,t,r)=>{r.d(t,{S:()=>a});var s=r(61657);let o=null;function a(){if(o)return o;if(!process.env.SUPABASE_SERVICE_ROLE_KEY)throw Error("SUPABASE_SERVICE_ROLE_KEY is not set");return o=(0,s.eI)("https://umhdnhckxgqywxgpybgo.supabase.co",process.env.SUPABASE_SERVICE_ROLE_KEY,{auth:{autoRefreshToken:!1,persistSession:!1}})}},19692:(e,t,r)=>{r.d(t,{t:()=>a});var s=r(67721),o=r(71615);async function a(){let e=await (0,o.cookies)();return(0,s.createServerClient)("https://umhdnhckxgqywxgpybgo.supabase.co","eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVtaGRuaGNreGdxeXd4Z3B5YmdvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTk0MDA1NzYsImV4cCI6MjA3NDk3NjU3Nn0.sodO3ZUaTWDxBBZitsrc_j3SUmVWBNlAsQoDAdzs8mI",{cookies:{getAll:()=>e.getAll(),setAll(t){try{t.forEach(({name:t,value:r,options:s})=>e.set(t,r,s))}catch{}}}})}},46569:(e,t,r)=>{r.d(t,{GJ:()=>a,kF:()=>l,ts:()=>o});var s=r(19692);async function o(){let e=await (0,s.t)(),{data:{user:t}}=await e.auth.getUser();return t}async function a(){let e=await (0,s.t)(),t=await o();if(!t)return!1;console.log("[v0] Checking admin status for user:",t.email);let{data:r,error:a}=await e.from("users").select("role").eq("email",t.email).single();if(console.log("[v0] User data from database:",r),console.log("[v0] Query error:",a),a||!r)return console.log("[v0] No user data found or error occurred"),!1;let l="admin"===r.role;return console.log("[v0] Is admin:",l),l}async function l(){if(!await a())throw Error("Unauthorized: Admin access required")}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[8948,4526,9702,5972,3098],()=>r(32252));module.exports=s})();