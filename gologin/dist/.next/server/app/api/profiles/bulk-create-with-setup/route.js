"use strict";(()=>{var e={};e.id=2174,e.ids=[2174],e.modules={72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},68621:e=>{e.exports=require("punycode")},76162:e=>{e.exports=require("stream")},17360:e=>{e.exports=require("url")},71568:e=>{e.exports=require("zlib")},3570:(e,r,o)=>{o.r(r),o.d(r,{originalPathname:()=>h,patchFetch:()=>v,requestAsyncStorage:()=>f,routeModule:()=>p,serverHooks:()=>m,staticGenerationAsyncStorage:()=>g});var t={};o.r(t),o.d(t,{POST:()=>u});var s=o(49303),i=o(88716),a=o(60670),l=o(19692),n=o(99064),c=o(87070),d=o(83098);async function u(e){try{let r;let t=await (0,l.t)(),{data:{user:s},error:i}=await t.auth.getUser();if(i||!s)return c.NextResponse.json({error:"Unauthorized"},{status:401});let{data:a,error:u}=await t.from("users").select("id").eq("email",s.email).single();if(u||!a)return console.error("[v0] User lookup error:",u),console.error("[v0] Auth user email:",s.email),c.NextResponse.json({error:"User not found in database"},{status:404});console.log(`[v0] Found database user ID: ${a.id} for email: ${s.email}`);let{profiles:p,folderName:f}=await e.json();if(!p||!Array.isArray(p)||0===p.length)return c.NextResponse.json({error:"No profiles provided"},{status:400});if(!f)return c.NextResponse.json({error:"Folder name is required"},{status:400});console.log(`[v0] Creating ${p.length} profiles in folder: ${f}`);try{console.log(`[v0] Creating/getting folder "${f}"...`),r=(await (0,d.L6)(f)).id,console.log(`[v0] ✓ Folder ready with ID: ${r}`)}catch(t){let e=t instanceof Error?t.message:"";if(e.includes("already exists")){console.log("[v0] Folder already exists, fetching existing folder...");try{let{gologinAPI:e}=await Promise.resolve().then(o.bind(o,83098)),t=(await e.getFolders()).find(e=>e.name===f);t&&(r=t.id,console.log(`[v0] ✓ Found existing folder with ID: ${r}`))}catch(e){console.log(`[v0] ⚠ Could not fetch existing folder: ${e}`)}}r||(console.log(`[v0] ⚠ Folder creation failed: ${e}`),console.log("[v0] Profiles will be created in default folder"))}let g=(0,n.S)(),m={created:0,failed:0,errors:[]};for(let e of p)try{let{email:o,password:t,recovery:s}=e;if(!o||!t){m.failed++,m.errors.push("Missing email or password for profile");continue}let i=o.split("@")[0];console.log(`[v0] Creating profile: ${i} in folder: ${f}`);let l=await (0,d.ED)({name:i,folderId:r});console.log(`[v0] ✓ GoLogin profile created successfully:`),console.log(`[v0]   - Profile ID: ${l.id}`),console.log(`[v0]   - Profile Name: ${i}`),console.log(`[v0]   - Folder: ${f}`),console.log(`[v0]   - Check in GoLogin: https://app.gologin.com/profile/${l.id}`);let{data:n,error:c}=await g.from("gologin_profiles").insert({profile_id:l.id,profile_name:i,gmail_email:o,gmail_password:t,recovery_email:s,folder_name:f,assigned_user_id:a.id,status:"idle"}).select().single();if(c){m.failed++,m.errors.push(`Failed to save ${o}: ${c.message}`),console.error(`[v0] Database error for ${o}:`,c),console.error(`[v0] ⚠ Note: Profile was created in GoLogin but failed to save to database`),console.error(`[v0] ⚠ Profile ID: ${l.id} - you may need to manually delete it from GoLogin`);continue}console.log(`[v0] ✓ Profile saved to database with ID: ${n.id}`);let{data:u,error:p}=await g.from("automation_tasks").insert({profile_id:n.id,task_type:"setup_gmail",status:"pending",config:{email:o,password:t,recovery:s}}).select().single();if(p){console.error(`[v0] Failed to create task for ${o}:`,p),m.failed++,m.errors.push(`Failed to create task for ${o}: ${p.message}`);continue}m.created++,console.log(`[v0] ✓ Successfully created profile and task for: ${i}`)}catch(r){m.failed++;let e=r instanceof Error?r.message:"Unknown error";m.errors.push(`Failed to create profile: ${e}`),console.error("[v0] Error creating profile:",r)}return console.log(`[v0] Bulk creation complete: ${m.created} created, ${m.failed} failed`),c.NextResponse.json({success:!0,...m})}catch(e){return console.error("[v0] Error in bulk creation:",e),c.NextResponse.json({error:e instanceof Error?e.message:"Failed to create profiles"},{status:500})}}let p=new s.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/profiles/bulk-create-with-setup/route",pathname:"/api/profiles/bulk-create-with-setup",filename:"route",bundlePath:"app/api/profiles/bulk-create-with-setup/route"},resolvedPagePath:"C:\\Users\\HP\\Documents\\GitHub\\GologinAutomation\\gologin\\app\\api\\profiles\\bulk-create-with-setup\\route.ts",nextConfigOutput:"standalone",userland:t}),{requestAsyncStorage:f,staticGenerationAsyncStorage:g,serverHooks:m}=p,h="/api/profiles/bulk-create-with-setup/route";function v(){return(0,a.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:g})}},99064:(e,r,o)=>{o.d(r,{S:()=>i});var t=o(61657);let s=null;function i(){if(s)return s;if(!process.env.SUPABASE_SERVICE_ROLE_KEY)throw Error("SUPABASE_SERVICE_ROLE_KEY is not set");return s=(0,t.eI)("https://umhdnhckxgqywxgpybgo.supabase.co",process.env.SUPABASE_SERVICE_ROLE_KEY,{auth:{autoRefreshToken:!1,persistSession:!1}})}},19692:(e,r,o)=>{o.d(r,{t:()=>i});var t=o(67721),s=o(71615);async function i(){let e=await (0,s.cookies)();return(0,t.createServerClient)("https://umhdnhckxgqywxgpybgo.supabase.co","eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVtaGRuaGNreGdxeXd4Z3B5YmdvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTk0MDA1NzYsImV4cCI6MjA3NDk3NjU3Nn0.sodO3ZUaTWDxBBZitsrc_j3SUmVWBNlAsQoDAdzs8mI",{cookies:{getAll:()=>e.getAll(),setAll(r){try{r.forEach(({name:r,value:o,options:t})=>e.set(r,o,t))}catch{}}}})}}};var r=require("../../../../webpack-runtime.js");r.C(e);var o=e=>r(r.s=e),t=r.X(0,[8948,4526,9702,5972,3098],()=>o(3570));module.exports=t})();